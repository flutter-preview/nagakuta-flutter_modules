// coverage:ignore-file
// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: type=lint
// ignore_for_file: unused_element, deprecated_member_use, deprecated_member_use_from_same_package, use_function_type_syntax_for_parameters, unnecessary_const, avoid_init_to_null, invalid_override_different_default_values_named, prefer_expression_function_bodies, annotate_overrides, invalid_annotation_target, unnecessary_question_mark

part of 'status.dart';

// **************************************************************************
// FreezedGenerator
// **************************************************************************

T _$identity<T>(T value) => value;

final _privateConstructorUsedError = UnsupportedError(
    'It seems like you constructed your class using `MyClass._()`. This constructor is only meant to be used by freezed and you are not supposed to need it nor use it.\nPlease check the documentation here for more information: https://github.com/rrousselGit/freezed#custom-getters-and-methods');

/// @nodoc
mixin _$HttpStatus {
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $HttpStatusCopyWith<$Res> {
  factory $HttpStatusCopyWith(
          HttpStatus value, $Res Function(HttpStatus) then) =
      _$HttpStatusCopyWithImpl<$Res, HttpStatus>;
}

/// @nodoc
class _$HttpStatusCopyWithImpl<$Res, $Val extends HttpStatus>
    implements $HttpStatusCopyWith<$Res> {
  _$HttpStatusCopyWithImpl(this._value, this._then);

  // ignore: unused_field
  final $Val _value;
  // ignore: unused_field
  final $Res Function($Val) _then;
}

/// @nodoc
abstract class _$$HttpStatusContinueCopyWith<$Res> {
  factory _$$HttpStatusContinueCopyWith(_$HttpStatusContinue value,
          $Res Function(_$HttpStatusContinue) then) =
      __$$HttpStatusContinueCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusContinueCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusContinue>
    implements _$$HttpStatusContinueCopyWith<$Res> {
  __$$HttpStatusContinueCopyWithImpl(
      _$HttpStatusContinue _value, $Res Function(_$HttpStatusContinue) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusContinue extends HttpStatusContinue {
  const _$HttpStatusContinue() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$HttpStatusContinue);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return continues();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return continues?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (continues != null) {
      return continues();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return continues(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return continues?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (continues != null) {
      return continues(this);
    }
    return orElse();
  }
}

abstract class HttpStatusContinue extends HttpStatus {
  const factory HttpStatusContinue() = _$HttpStatusContinue;
  const HttpStatusContinue._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusSwitchingProtocolsCopyWith<$Res> {
  factory _$$HttpStatusSwitchingProtocolsCopyWith(
          _$HttpStatusSwitchingProtocols value,
          $Res Function(_$HttpStatusSwitchingProtocols) then) =
      __$$HttpStatusSwitchingProtocolsCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusSwitchingProtocolsCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusSwitchingProtocols>
    implements _$$HttpStatusSwitchingProtocolsCopyWith<$Res> {
  __$$HttpStatusSwitchingProtocolsCopyWithImpl(
      _$HttpStatusSwitchingProtocols _value,
      $Res Function(_$HttpStatusSwitchingProtocols) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusSwitchingProtocols extends HttpStatusSwitchingProtocols {
  const _$HttpStatusSwitchingProtocols() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusSwitchingProtocols);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return switchingProtocols();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return switchingProtocols?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (switchingProtocols != null) {
      return switchingProtocols();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return switchingProtocols(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return switchingProtocols?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (switchingProtocols != null) {
      return switchingProtocols(this);
    }
    return orElse();
  }
}

abstract class HttpStatusSwitchingProtocols extends HttpStatus {
  const factory HttpStatusSwitchingProtocols() = _$HttpStatusSwitchingProtocols;
  const HttpStatusSwitchingProtocols._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusProcessingCopyWith<$Res> {
  factory _$$HttpStatusProcessingCopyWith(_$HttpStatusProcessing value,
          $Res Function(_$HttpStatusProcessing) then) =
      __$$HttpStatusProcessingCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusProcessingCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusProcessing>
    implements _$$HttpStatusProcessingCopyWith<$Res> {
  __$$HttpStatusProcessingCopyWithImpl(_$HttpStatusProcessing _value,
      $Res Function(_$HttpStatusProcessing) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusProcessing extends HttpStatusProcessing {
  const _$HttpStatusProcessing() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$HttpStatusProcessing);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return processing();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return processing?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (processing != null) {
      return processing();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return processing(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return processing?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (processing != null) {
      return processing(this);
    }
    return orElse();
  }
}

abstract class HttpStatusProcessing extends HttpStatus {
  const factory HttpStatusProcessing() = _$HttpStatusProcessing;
  const HttpStatusProcessing._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusOkCopyWith<$Res> {
  factory _$$HttpStatusOkCopyWith(
          _$HttpStatusOk value, $Res Function(_$HttpStatusOk) then) =
      __$$HttpStatusOkCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusOkCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusOk>
    implements _$$HttpStatusOkCopyWith<$Res> {
  __$$HttpStatusOkCopyWithImpl(
      _$HttpStatusOk _value, $Res Function(_$HttpStatusOk) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusOk extends HttpStatusOk {
  const _$HttpStatusOk() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$HttpStatusOk);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return ok();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return ok?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (ok != null) {
      return ok();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return ok(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return ok?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (ok != null) {
      return ok(this);
    }
    return orElse();
  }
}

abstract class HttpStatusOk extends HttpStatus {
  const factory HttpStatusOk() = _$HttpStatusOk;
  const HttpStatusOk._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusCreatedCopyWith<$Res> {
  factory _$$HttpStatusCreatedCopyWith(
          _$HttpStatusCreated value, $Res Function(_$HttpStatusCreated) then) =
      __$$HttpStatusCreatedCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusCreatedCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusCreated>
    implements _$$HttpStatusCreatedCopyWith<$Res> {
  __$$HttpStatusCreatedCopyWithImpl(
      _$HttpStatusCreated _value, $Res Function(_$HttpStatusCreated) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusCreated extends HttpStatusCreated {
  const _$HttpStatusCreated() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$HttpStatusCreated);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return created();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return created?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (created != null) {
      return created();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return created(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return created?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (created != null) {
      return created(this);
    }
    return orElse();
  }
}

abstract class HttpStatusCreated extends HttpStatus {
  const factory HttpStatusCreated() = _$HttpStatusCreated;
  const HttpStatusCreated._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusAcceptedCopyWith<$Res> {
  factory _$$HttpStatusAcceptedCopyWith(_$HttpStatusAccepted value,
          $Res Function(_$HttpStatusAccepted) then) =
      __$$HttpStatusAcceptedCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusAcceptedCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusAccepted>
    implements _$$HttpStatusAcceptedCopyWith<$Res> {
  __$$HttpStatusAcceptedCopyWithImpl(
      _$HttpStatusAccepted _value, $Res Function(_$HttpStatusAccepted) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusAccepted extends HttpStatusAccepted {
  const _$HttpStatusAccepted() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$HttpStatusAccepted);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return accepted();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return accepted?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (accepted != null) {
      return accepted();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return accepted(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return accepted?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (accepted != null) {
      return accepted(this);
    }
    return orElse();
  }
}

abstract class HttpStatusAccepted extends HttpStatus {
  const factory HttpStatusAccepted() = _$HttpStatusAccepted;
  const HttpStatusAccepted._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusNonAuthoritativeInformationCopyWith<$Res> {
  factory _$$HttpStatusNonAuthoritativeInformationCopyWith(
          _$HttpStatusNonAuthoritativeInformation value,
          $Res Function(_$HttpStatusNonAuthoritativeInformation) then) =
      __$$HttpStatusNonAuthoritativeInformationCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusNonAuthoritativeInformationCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res,
        _$HttpStatusNonAuthoritativeInformation>
    implements _$$HttpStatusNonAuthoritativeInformationCopyWith<$Res> {
  __$$HttpStatusNonAuthoritativeInformationCopyWithImpl(
      _$HttpStatusNonAuthoritativeInformation _value,
      $Res Function(_$HttpStatusNonAuthoritativeInformation) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusNonAuthoritativeInformation
    extends HttpStatusNonAuthoritativeInformation {
  const _$HttpStatusNonAuthoritativeInformation() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusNonAuthoritativeInformation);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return nonAuthoritativeInformation();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return nonAuthoritativeInformation?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (nonAuthoritativeInformation != null) {
      return nonAuthoritativeInformation();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return nonAuthoritativeInformation(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return nonAuthoritativeInformation?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (nonAuthoritativeInformation != null) {
      return nonAuthoritativeInformation(this);
    }
    return orElse();
  }
}

abstract class HttpStatusNonAuthoritativeInformation extends HttpStatus {
  const factory HttpStatusNonAuthoritativeInformation() =
      _$HttpStatusNonAuthoritativeInformation;
  const HttpStatusNonAuthoritativeInformation._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusNoContentCopyWith<$Res> {
  factory _$$HttpStatusNoContentCopyWith(_$HttpStatusNoContent value,
          $Res Function(_$HttpStatusNoContent) then) =
      __$$HttpStatusNoContentCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusNoContentCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusNoContent>
    implements _$$HttpStatusNoContentCopyWith<$Res> {
  __$$HttpStatusNoContentCopyWithImpl(
      _$HttpStatusNoContent _value, $Res Function(_$HttpStatusNoContent) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusNoContent extends HttpStatusNoContent {
  const _$HttpStatusNoContent() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$HttpStatusNoContent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return noContent();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return noContent?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (noContent != null) {
      return noContent();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return noContent(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return noContent?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (noContent != null) {
      return noContent(this);
    }
    return orElse();
  }
}

abstract class HttpStatusNoContent extends HttpStatus {
  const factory HttpStatusNoContent() = _$HttpStatusNoContent;
  const HttpStatusNoContent._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusResetContentCopyWith<$Res> {
  factory _$$HttpStatusResetContentCopyWith(_$HttpStatusResetContent value,
          $Res Function(_$HttpStatusResetContent) then) =
      __$$HttpStatusResetContentCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusResetContentCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusResetContent>
    implements _$$HttpStatusResetContentCopyWith<$Res> {
  __$$HttpStatusResetContentCopyWithImpl(_$HttpStatusResetContent _value,
      $Res Function(_$HttpStatusResetContent) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusResetContent extends HttpStatusResetContent {
  const _$HttpStatusResetContent() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$HttpStatusResetContent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return resetContent();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return resetContent?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (resetContent != null) {
      return resetContent();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return resetContent(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return resetContent?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (resetContent != null) {
      return resetContent(this);
    }
    return orElse();
  }
}

abstract class HttpStatusResetContent extends HttpStatus {
  const factory HttpStatusResetContent() = _$HttpStatusResetContent;
  const HttpStatusResetContent._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusPartialContentCopyWith<$Res> {
  factory _$$HttpStatusPartialContentCopyWith(_$HttpStatusPartialContent value,
          $Res Function(_$HttpStatusPartialContent) then) =
      __$$HttpStatusPartialContentCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusPartialContentCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusPartialContent>
    implements _$$HttpStatusPartialContentCopyWith<$Res> {
  __$$HttpStatusPartialContentCopyWithImpl(_$HttpStatusPartialContent _value,
      $Res Function(_$HttpStatusPartialContent) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusPartialContent extends HttpStatusPartialContent {
  const _$HttpStatusPartialContent() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusPartialContent);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return partialContent();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return partialContent?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (partialContent != null) {
      return partialContent();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return partialContent(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return partialContent?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (partialContent != null) {
      return partialContent(this);
    }
    return orElse();
  }
}

abstract class HttpStatusPartialContent extends HttpStatus {
  const factory HttpStatusPartialContent() = _$HttpStatusPartialContent;
  const HttpStatusPartialContent._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusMultiStatusCopyWith<$Res> {
  factory _$$HttpStatusMultiStatusCopyWith(_$HttpStatusMultiStatus value,
          $Res Function(_$HttpStatusMultiStatus) then) =
      __$$HttpStatusMultiStatusCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusMultiStatusCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusMultiStatus>
    implements _$$HttpStatusMultiStatusCopyWith<$Res> {
  __$$HttpStatusMultiStatusCopyWithImpl(_$HttpStatusMultiStatus _value,
      $Res Function(_$HttpStatusMultiStatus) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusMultiStatus extends HttpStatusMultiStatus {
  const _$HttpStatusMultiStatus() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$HttpStatusMultiStatus);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return multiStatus();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return multiStatus?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (multiStatus != null) {
      return multiStatus();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return multiStatus(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return multiStatus?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (multiStatus != null) {
      return multiStatus(this);
    }
    return orElse();
  }
}

abstract class HttpStatusMultiStatus extends HttpStatus {
  const factory HttpStatusMultiStatus() = _$HttpStatusMultiStatus;
  const HttpStatusMultiStatus._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusAlreadyReportedCopyWith<$Res> {
  factory _$$HttpStatusAlreadyReportedCopyWith(
          _$HttpStatusAlreadyReported value,
          $Res Function(_$HttpStatusAlreadyReported) then) =
      __$$HttpStatusAlreadyReportedCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusAlreadyReportedCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusAlreadyReported>
    implements _$$HttpStatusAlreadyReportedCopyWith<$Res> {
  __$$HttpStatusAlreadyReportedCopyWithImpl(_$HttpStatusAlreadyReported _value,
      $Res Function(_$HttpStatusAlreadyReported) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusAlreadyReported extends HttpStatusAlreadyReported {
  const _$HttpStatusAlreadyReported() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusAlreadyReported);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return alreadyReported();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return alreadyReported?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (alreadyReported != null) {
      return alreadyReported();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return alreadyReported(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return alreadyReported?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (alreadyReported != null) {
      return alreadyReported(this);
    }
    return orElse();
  }
}

abstract class HttpStatusAlreadyReported extends HttpStatus {
  const factory HttpStatusAlreadyReported() = _$HttpStatusAlreadyReported;
  const HttpStatusAlreadyReported._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusImUsedCopyWith<$Res> {
  factory _$$HttpStatusImUsedCopyWith(
          _$HttpStatusImUsed value, $Res Function(_$HttpStatusImUsed) then) =
      __$$HttpStatusImUsedCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusImUsedCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusImUsed>
    implements _$$HttpStatusImUsedCopyWith<$Res> {
  __$$HttpStatusImUsedCopyWithImpl(
      _$HttpStatusImUsed _value, $Res Function(_$HttpStatusImUsed) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusImUsed extends HttpStatusImUsed {
  const _$HttpStatusImUsed() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$HttpStatusImUsed);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return imUsed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return imUsed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (imUsed != null) {
      return imUsed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return imUsed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return imUsed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (imUsed != null) {
      return imUsed(this);
    }
    return orElse();
  }
}

abstract class HttpStatusImUsed extends HttpStatus {
  const factory HttpStatusImUsed() = _$HttpStatusImUsed;
  const HttpStatusImUsed._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusMultipleChoicesCopyWith<$Res> {
  factory _$$HttpStatusMultipleChoicesCopyWith(
          _$HttpStatusMultipleChoices value,
          $Res Function(_$HttpStatusMultipleChoices) then) =
      __$$HttpStatusMultipleChoicesCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusMultipleChoicesCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusMultipleChoices>
    implements _$$HttpStatusMultipleChoicesCopyWith<$Res> {
  __$$HttpStatusMultipleChoicesCopyWithImpl(_$HttpStatusMultipleChoices _value,
      $Res Function(_$HttpStatusMultipleChoices) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusMultipleChoices extends HttpStatusMultipleChoices {
  const _$HttpStatusMultipleChoices() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusMultipleChoices);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return multipleChoices();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return multipleChoices?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (multipleChoices != null) {
      return multipleChoices();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return multipleChoices(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return multipleChoices?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (multipleChoices != null) {
      return multipleChoices(this);
    }
    return orElse();
  }
}

abstract class HttpStatusMultipleChoices extends HttpStatus {
  const factory HttpStatusMultipleChoices() = _$HttpStatusMultipleChoices;
  const HttpStatusMultipleChoices._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusMovedPermanentlyCopyWith<$Res> {
  factory _$$HttpStatusMovedPermanentlyCopyWith(
          _$HttpStatusMovedPermanently value,
          $Res Function(_$HttpStatusMovedPermanently) then) =
      __$$HttpStatusMovedPermanentlyCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusMovedPermanentlyCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusMovedPermanently>
    implements _$$HttpStatusMovedPermanentlyCopyWith<$Res> {
  __$$HttpStatusMovedPermanentlyCopyWithImpl(
      _$HttpStatusMovedPermanently _value,
      $Res Function(_$HttpStatusMovedPermanently) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusMovedPermanently extends HttpStatusMovedPermanently {
  const _$HttpStatusMovedPermanently() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusMovedPermanently);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return movedPermanently();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return movedPermanently?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (movedPermanently != null) {
      return movedPermanently();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return movedPermanently(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return movedPermanently?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (movedPermanently != null) {
      return movedPermanently(this);
    }
    return orElse();
  }
}

abstract class HttpStatusMovedPermanently extends HttpStatus {
  const factory HttpStatusMovedPermanently() = _$HttpStatusMovedPermanently;
  const HttpStatusMovedPermanently._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusFoundCopyWith<$Res> {
  factory _$$HttpStatusFoundCopyWith(
          _$HttpStatusFound value, $Res Function(_$HttpStatusFound) then) =
      __$$HttpStatusFoundCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusFoundCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusFound>
    implements _$$HttpStatusFoundCopyWith<$Res> {
  __$$HttpStatusFoundCopyWithImpl(
      _$HttpStatusFound _value, $Res Function(_$HttpStatusFound) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusFound extends HttpStatusFound {
  const _$HttpStatusFound() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$HttpStatusFound);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return found();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return found?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (found != null) {
      return found();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return found(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return found?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (found != null) {
      return found(this);
    }
    return orElse();
  }
}

abstract class HttpStatusFound extends HttpStatus {
  const factory HttpStatusFound() = _$HttpStatusFound;
  const HttpStatusFound._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusSeeOtherCopyWith<$Res> {
  factory _$$HttpStatusSeeOtherCopyWith(_$HttpStatusSeeOther value,
          $Res Function(_$HttpStatusSeeOther) then) =
      __$$HttpStatusSeeOtherCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusSeeOtherCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusSeeOther>
    implements _$$HttpStatusSeeOtherCopyWith<$Res> {
  __$$HttpStatusSeeOtherCopyWithImpl(
      _$HttpStatusSeeOther _value, $Res Function(_$HttpStatusSeeOther) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusSeeOther extends HttpStatusSeeOther {
  const _$HttpStatusSeeOther() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$HttpStatusSeeOther);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return seeOther();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return seeOther?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (seeOther != null) {
      return seeOther();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return seeOther(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return seeOther?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (seeOther != null) {
      return seeOther(this);
    }
    return orElse();
  }
}

abstract class HttpStatusSeeOther extends HttpStatus {
  const factory HttpStatusSeeOther() = _$HttpStatusSeeOther;
  const HttpStatusSeeOther._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusNotModifiedCopyWith<$Res> {
  factory _$$HttpStatusNotModifiedCopyWith(_$HttpStatusNotModified value,
          $Res Function(_$HttpStatusNotModified) then) =
      __$$HttpStatusNotModifiedCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusNotModifiedCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusNotModified>
    implements _$$HttpStatusNotModifiedCopyWith<$Res> {
  __$$HttpStatusNotModifiedCopyWithImpl(_$HttpStatusNotModified _value,
      $Res Function(_$HttpStatusNotModified) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusNotModified extends HttpStatusNotModified {
  const _$HttpStatusNotModified() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$HttpStatusNotModified);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return notModified();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return notModified?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (notModified != null) {
      return notModified();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return notModified(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return notModified?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (notModified != null) {
      return notModified(this);
    }
    return orElse();
  }
}

abstract class HttpStatusNotModified extends HttpStatus {
  const factory HttpStatusNotModified() = _$HttpStatusNotModified;
  const HttpStatusNotModified._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusUseProxyCopyWith<$Res> {
  factory _$$HttpStatusUseProxyCopyWith(_$HttpStatusUseProxy value,
          $Res Function(_$HttpStatusUseProxy) then) =
      __$$HttpStatusUseProxyCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusUseProxyCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusUseProxy>
    implements _$$HttpStatusUseProxyCopyWith<$Res> {
  __$$HttpStatusUseProxyCopyWithImpl(
      _$HttpStatusUseProxy _value, $Res Function(_$HttpStatusUseProxy) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusUseProxy extends HttpStatusUseProxy {
  const _$HttpStatusUseProxy() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$HttpStatusUseProxy);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return useProxy();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return useProxy?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (useProxy != null) {
      return useProxy();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return useProxy(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return useProxy?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (useProxy != null) {
      return useProxy(this);
    }
    return orElse();
  }
}

abstract class HttpStatusUseProxy extends HttpStatus {
  const factory HttpStatusUseProxy() = _$HttpStatusUseProxy;
  const HttpStatusUseProxy._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusTemporaryRedirectCopyWith<$Res> {
  factory _$$HttpStatusTemporaryRedirectCopyWith(
          _$HttpStatusTemporaryRedirect value,
          $Res Function(_$HttpStatusTemporaryRedirect) then) =
      __$$HttpStatusTemporaryRedirectCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusTemporaryRedirectCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusTemporaryRedirect>
    implements _$$HttpStatusTemporaryRedirectCopyWith<$Res> {
  __$$HttpStatusTemporaryRedirectCopyWithImpl(
      _$HttpStatusTemporaryRedirect _value,
      $Res Function(_$HttpStatusTemporaryRedirect) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusTemporaryRedirect extends HttpStatusTemporaryRedirect {
  const _$HttpStatusTemporaryRedirect() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusTemporaryRedirect);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return temporaryRedirect();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return temporaryRedirect?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (temporaryRedirect != null) {
      return temporaryRedirect();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return temporaryRedirect(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return temporaryRedirect?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (temporaryRedirect != null) {
      return temporaryRedirect(this);
    }
    return orElse();
  }
}

abstract class HttpStatusTemporaryRedirect extends HttpStatus {
  const factory HttpStatusTemporaryRedirect() = _$HttpStatusTemporaryRedirect;
  const HttpStatusTemporaryRedirect._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusPermanentRedirectCopyWith<$Res> {
  factory _$$HttpStatusPermanentRedirectCopyWith(
          _$HttpStatusPermanentRedirect value,
          $Res Function(_$HttpStatusPermanentRedirect) then) =
      __$$HttpStatusPermanentRedirectCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusPermanentRedirectCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusPermanentRedirect>
    implements _$$HttpStatusPermanentRedirectCopyWith<$Res> {
  __$$HttpStatusPermanentRedirectCopyWithImpl(
      _$HttpStatusPermanentRedirect _value,
      $Res Function(_$HttpStatusPermanentRedirect) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusPermanentRedirect extends HttpStatusPermanentRedirect {
  const _$HttpStatusPermanentRedirect() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusPermanentRedirect);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return permanentRedirect();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return permanentRedirect?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (permanentRedirect != null) {
      return permanentRedirect();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return permanentRedirect(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return permanentRedirect?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (permanentRedirect != null) {
      return permanentRedirect(this);
    }
    return orElse();
  }
}

abstract class HttpStatusPermanentRedirect extends HttpStatus {
  const factory HttpStatusPermanentRedirect() = _$HttpStatusPermanentRedirect;
  const HttpStatusPermanentRedirect._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusBadRequestCopyWith<$Res> {
  factory _$$HttpStatusBadRequestCopyWith(_$HttpStatusBadRequest value,
          $Res Function(_$HttpStatusBadRequest) then) =
      __$$HttpStatusBadRequestCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusBadRequestCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusBadRequest>
    implements _$$HttpStatusBadRequestCopyWith<$Res> {
  __$$HttpStatusBadRequestCopyWithImpl(_$HttpStatusBadRequest _value,
      $Res Function(_$HttpStatusBadRequest) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusBadRequest extends HttpStatusBadRequest {
  const _$HttpStatusBadRequest() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$HttpStatusBadRequest);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return badRequest();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return badRequest?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (badRequest != null) {
      return badRequest();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return badRequest(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return badRequest?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (badRequest != null) {
      return badRequest(this);
    }
    return orElse();
  }
}

abstract class HttpStatusBadRequest extends HttpStatus {
  const factory HttpStatusBadRequest() = _$HttpStatusBadRequest;
  const HttpStatusBadRequest._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusUnauthorizedCopyWith<$Res> {
  factory _$$HttpStatusUnauthorizedCopyWith(_$HttpStatusUnauthorized value,
          $Res Function(_$HttpStatusUnauthorized) then) =
      __$$HttpStatusUnauthorizedCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusUnauthorizedCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusUnauthorized>
    implements _$$HttpStatusUnauthorizedCopyWith<$Res> {
  __$$HttpStatusUnauthorizedCopyWithImpl(_$HttpStatusUnauthorized _value,
      $Res Function(_$HttpStatusUnauthorized) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusUnauthorized extends HttpStatusUnauthorized {
  const _$HttpStatusUnauthorized() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$HttpStatusUnauthorized);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return unauthorized();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return unauthorized?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (unauthorized != null) {
      return unauthorized();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return unauthorized(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return unauthorized?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (unauthorized != null) {
      return unauthorized(this);
    }
    return orElse();
  }
}

abstract class HttpStatusUnauthorized extends HttpStatus {
  const factory HttpStatusUnauthorized() = _$HttpStatusUnauthorized;
  const HttpStatusUnauthorized._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusPaymentRequeiredCopyWith<$Res> {
  factory _$$HttpStatusPaymentRequeiredCopyWith(
          _$HttpStatusPaymentRequeired value,
          $Res Function(_$HttpStatusPaymentRequeired) then) =
      __$$HttpStatusPaymentRequeiredCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusPaymentRequeiredCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusPaymentRequeired>
    implements _$$HttpStatusPaymentRequeiredCopyWith<$Res> {
  __$$HttpStatusPaymentRequeiredCopyWithImpl(
      _$HttpStatusPaymentRequeired _value,
      $Res Function(_$HttpStatusPaymentRequeired) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusPaymentRequeired extends HttpStatusPaymentRequeired {
  const _$HttpStatusPaymentRequeired() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusPaymentRequeired);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return paymentRequired();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return paymentRequired?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (paymentRequired != null) {
      return paymentRequired();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return paymentRequired(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return paymentRequired?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (paymentRequired != null) {
      return paymentRequired(this);
    }
    return orElse();
  }
}

abstract class HttpStatusPaymentRequeired extends HttpStatus {
  const factory HttpStatusPaymentRequeired() = _$HttpStatusPaymentRequeired;
  const HttpStatusPaymentRequeired._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusForbiddenCopyWith<$Res> {
  factory _$$HttpStatusForbiddenCopyWith(_$HttpStatusForbidden value,
          $Res Function(_$HttpStatusForbidden) then) =
      __$$HttpStatusForbiddenCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusForbiddenCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusForbidden>
    implements _$$HttpStatusForbiddenCopyWith<$Res> {
  __$$HttpStatusForbiddenCopyWithImpl(
      _$HttpStatusForbidden _value, $Res Function(_$HttpStatusForbidden) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusForbidden extends HttpStatusForbidden {
  const _$HttpStatusForbidden() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$HttpStatusForbidden);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return forbidden();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return forbidden?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (forbidden != null) {
      return forbidden();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return forbidden(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return forbidden?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (forbidden != null) {
      return forbidden(this);
    }
    return orElse();
  }
}

abstract class HttpStatusForbidden extends HttpStatus {
  const factory HttpStatusForbidden() = _$HttpStatusForbidden;
  const HttpStatusForbidden._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusNotFoundCopyWith<$Res> {
  factory _$$HttpStatusNotFoundCopyWith(_$HttpStatusNotFound value,
          $Res Function(_$HttpStatusNotFound) then) =
      __$$HttpStatusNotFoundCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusNotFoundCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusNotFound>
    implements _$$HttpStatusNotFoundCopyWith<$Res> {
  __$$HttpStatusNotFoundCopyWithImpl(
      _$HttpStatusNotFound _value, $Res Function(_$HttpStatusNotFound) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusNotFound extends HttpStatusNotFound {
  const _$HttpStatusNotFound() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$HttpStatusNotFound);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return notFound();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return notFound?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (notFound != null) {
      return notFound();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return notFound(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return notFound?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (notFound != null) {
      return notFound(this);
    }
    return orElse();
  }
}

abstract class HttpStatusNotFound extends HttpStatus {
  const factory HttpStatusNotFound() = _$HttpStatusNotFound;
  const HttpStatusNotFound._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusMethodNotAllowedCopyWith<$Res> {
  factory _$$HttpStatusMethodNotAllowedCopyWith(
          _$HttpStatusMethodNotAllowed value,
          $Res Function(_$HttpStatusMethodNotAllowed) then) =
      __$$HttpStatusMethodNotAllowedCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusMethodNotAllowedCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusMethodNotAllowed>
    implements _$$HttpStatusMethodNotAllowedCopyWith<$Res> {
  __$$HttpStatusMethodNotAllowedCopyWithImpl(
      _$HttpStatusMethodNotAllowed _value,
      $Res Function(_$HttpStatusMethodNotAllowed) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusMethodNotAllowed extends HttpStatusMethodNotAllowed {
  const _$HttpStatusMethodNotAllowed() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusMethodNotAllowed);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return methodNotAllowed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return methodNotAllowed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (methodNotAllowed != null) {
      return methodNotAllowed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return methodNotAllowed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return methodNotAllowed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (methodNotAllowed != null) {
      return methodNotAllowed(this);
    }
    return orElse();
  }
}

abstract class HttpStatusMethodNotAllowed extends HttpStatus {
  const factory HttpStatusMethodNotAllowed() = _$HttpStatusMethodNotAllowed;
  const HttpStatusMethodNotAllowed._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusNotAcceptableCopyWith<$Res> {
  factory _$$HttpStatusNotAcceptableCopyWith(_$HttpStatusNotAcceptable value,
          $Res Function(_$HttpStatusNotAcceptable) then) =
      __$$HttpStatusNotAcceptableCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusNotAcceptableCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusNotAcceptable>
    implements _$$HttpStatusNotAcceptableCopyWith<$Res> {
  __$$HttpStatusNotAcceptableCopyWithImpl(_$HttpStatusNotAcceptable _value,
      $Res Function(_$HttpStatusNotAcceptable) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusNotAcceptable extends HttpStatusNotAcceptable {
  const _$HttpStatusNotAcceptable() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusNotAcceptable);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return notAcceptable();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return notAcceptable?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (notAcceptable != null) {
      return notAcceptable();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return notAcceptable(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return notAcceptable?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (notAcceptable != null) {
      return notAcceptable(this);
    }
    return orElse();
  }
}

abstract class HttpStatusNotAcceptable extends HttpStatus {
  const factory HttpStatusNotAcceptable() = _$HttpStatusNotAcceptable;
  const HttpStatusNotAcceptable._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusProxyAuthenticationRequiredCopyWith<$Res> {
  factory _$$HttpStatusProxyAuthenticationRequiredCopyWith(
          _$HttpStatusProxyAuthenticationRequired value,
          $Res Function(_$HttpStatusProxyAuthenticationRequired) then) =
      __$$HttpStatusProxyAuthenticationRequiredCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusProxyAuthenticationRequiredCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res,
        _$HttpStatusProxyAuthenticationRequired>
    implements _$$HttpStatusProxyAuthenticationRequiredCopyWith<$Res> {
  __$$HttpStatusProxyAuthenticationRequiredCopyWithImpl(
      _$HttpStatusProxyAuthenticationRequired _value,
      $Res Function(_$HttpStatusProxyAuthenticationRequired) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusProxyAuthenticationRequired
    extends HttpStatusProxyAuthenticationRequired {
  const _$HttpStatusProxyAuthenticationRequired() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusProxyAuthenticationRequired);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return proxyAuthenticationRequired();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return proxyAuthenticationRequired?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (proxyAuthenticationRequired != null) {
      return proxyAuthenticationRequired();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return proxyAuthenticationRequired(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return proxyAuthenticationRequired?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (proxyAuthenticationRequired != null) {
      return proxyAuthenticationRequired(this);
    }
    return orElse();
  }
}

abstract class HttpStatusProxyAuthenticationRequired extends HttpStatus {
  const factory HttpStatusProxyAuthenticationRequired() =
      _$HttpStatusProxyAuthenticationRequired;
  const HttpStatusProxyAuthenticationRequired._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusRequestTimeoutCopyWith<$Res> {
  factory _$$HttpStatusRequestTimeoutCopyWith(_$HttpStatusRequestTimeout value,
          $Res Function(_$HttpStatusRequestTimeout) then) =
      __$$HttpStatusRequestTimeoutCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusRequestTimeoutCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusRequestTimeout>
    implements _$$HttpStatusRequestTimeoutCopyWith<$Res> {
  __$$HttpStatusRequestTimeoutCopyWithImpl(_$HttpStatusRequestTimeout _value,
      $Res Function(_$HttpStatusRequestTimeout) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusRequestTimeout extends HttpStatusRequestTimeout {
  const _$HttpStatusRequestTimeout() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusRequestTimeout);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return requestTimeout();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return requestTimeout?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (requestTimeout != null) {
      return requestTimeout();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return requestTimeout(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return requestTimeout?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (requestTimeout != null) {
      return requestTimeout(this);
    }
    return orElse();
  }
}

abstract class HttpStatusRequestTimeout extends HttpStatus {
  const factory HttpStatusRequestTimeout() = _$HttpStatusRequestTimeout;
  const HttpStatusRequestTimeout._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusConflictCopyWith<$Res> {
  factory _$$HttpStatusConflictCopyWith(_$HttpStatusConflict value,
          $Res Function(_$HttpStatusConflict) then) =
      __$$HttpStatusConflictCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusConflictCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusConflict>
    implements _$$HttpStatusConflictCopyWith<$Res> {
  __$$HttpStatusConflictCopyWithImpl(
      _$HttpStatusConflict _value, $Res Function(_$HttpStatusConflict) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusConflict extends HttpStatusConflict {
  const _$HttpStatusConflict() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$HttpStatusConflict);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return conflict();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return conflict?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (conflict != null) {
      return conflict();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return conflict(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return conflict?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (conflict != null) {
      return conflict(this);
    }
    return orElse();
  }
}

abstract class HttpStatusConflict extends HttpStatus {
  const factory HttpStatusConflict() = _$HttpStatusConflict;
  const HttpStatusConflict._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusGoneCopyWith<$Res> {
  factory _$$HttpStatusGoneCopyWith(
          _$HttpStatusGone value, $Res Function(_$HttpStatusGone) then) =
      __$$HttpStatusGoneCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusGoneCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusGone>
    implements _$$HttpStatusGoneCopyWith<$Res> {
  __$$HttpStatusGoneCopyWithImpl(
      _$HttpStatusGone _value, $Res Function(_$HttpStatusGone) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusGone extends HttpStatusGone {
  const _$HttpStatusGone() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$HttpStatusGone);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return gone();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return gone?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (gone != null) {
      return gone();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return gone(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return gone?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (gone != null) {
      return gone(this);
    }
    return orElse();
  }
}

abstract class HttpStatusGone extends HttpStatus {
  const factory HttpStatusGone() = _$HttpStatusGone;
  const HttpStatusGone._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusLengthRequiredCopyWith<$Res> {
  factory _$$HttpStatusLengthRequiredCopyWith(_$HttpStatusLengthRequired value,
          $Res Function(_$HttpStatusLengthRequired) then) =
      __$$HttpStatusLengthRequiredCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusLengthRequiredCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusLengthRequired>
    implements _$$HttpStatusLengthRequiredCopyWith<$Res> {
  __$$HttpStatusLengthRequiredCopyWithImpl(_$HttpStatusLengthRequired _value,
      $Res Function(_$HttpStatusLengthRequired) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusLengthRequired extends HttpStatusLengthRequired {
  const _$HttpStatusLengthRequired() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusLengthRequired);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return lengthRequired();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return lengthRequired?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (lengthRequired != null) {
      return lengthRequired();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return lengthRequired(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return lengthRequired?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (lengthRequired != null) {
      return lengthRequired(this);
    }
    return orElse();
  }
}

abstract class HttpStatusLengthRequired extends HttpStatus {
  const factory HttpStatusLengthRequired() = _$HttpStatusLengthRequired;
  const HttpStatusLengthRequired._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusPreconditionFailedCopyWith<$Res> {
  factory _$$HttpStatusPreconditionFailedCopyWith(
          _$HttpStatusPreconditionFailed value,
          $Res Function(_$HttpStatusPreconditionFailed) then) =
      __$$HttpStatusPreconditionFailedCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusPreconditionFailedCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusPreconditionFailed>
    implements _$$HttpStatusPreconditionFailedCopyWith<$Res> {
  __$$HttpStatusPreconditionFailedCopyWithImpl(
      _$HttpStatusPreconditionFailed _value,
      $Res Function(_$HttpStatusPreconditionFailed) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusPreconditionFailed extends HttpStatusPreconditionFailed {
  const _$HttpStatusPreconditionFailed() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusPreconditionFailed);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return preconditionFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return preconditionFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (preconditionFailed != null) {
      return preconditionFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return preconditionFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return preconditionFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (preconditionFailed != null) {
      return preconditionFailed(this);
    }
    return orElse();
  }
}

abstract class HttpStatusPreconditionFailed extends HttpStatus {
  const factory HttpStatusPreconditionFailed() = _$HttpStatusPreconditionFailed;
  const HttpStatusPreconditionFailed._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusRequestEntityTooLargeCopyWith<$Res> {
  factory _$$HttpStatusRequestEntityTooLargeCopyWith(
          _$HttpStatusRequestEntityTooLarge value,
          $Res Function(_$HttpStatusRequestEntityTooLarge) then) =
      __$$HttpStatusRequestEntityTooLargeCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusRequestEntityTooLargeCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusRequestEntityTooLarge>
    implements _$$HttpStatusRequestEntityTooLargeCopyWith<$Res> {
  __$$HttpStatusRequestEntityTooLargeCopyWithImpl(
      _$HttpStatusRequestEntityTooLarge _value,
      $Res Function(_$HttpStatusRequestEntityTooLarge) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusRequestEntityTooLarge
    extends HttpStatusRequestEntityTooLarge {
  const _$HttpStatusRequestEntityTooLarge() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusRequestEntityTooLarge);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return requestEntityTooLarge();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return requestEntityTooLarge?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (requestEntityTooLarge != null) {
      return requestEntityTooLarge();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return requestEntityTooLarge(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return requestEntityTooLarge?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (requestEntityTooLarge != null) {
      return requestEntityTooLarge(this);
    }
    return orElse();
  }
}

abstract class HttpStatusRequestEntityTooLarge extends HttpStatus {
  const factory HttpStatusRequestEntityTooLarge() =
      _$HttpStatusRequestEntityTooLarge;
  const HttpStatusRequestEntityTooLarge._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusRequestUriTooLongCopyWith<$Res> {
  factory _$$HttpStatusRequestUriTooLongCopyWith(
          _$HttpStatusRequestUriTooLong value,
          $Res Function(_$HttpStatusRequestUriTooLong) then) =
      __$$HttpStatusRequestUriTooLongCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusRequestUriTooLongCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusRequestUriTooLong>
    implements _$$HttpStatusRequestUriTooLongCopyWith<$Res> {
  __$$HttpStatusRequestUriTooLongCopyWithImpl(
      _$HttpStatusRequestUriTooLong _value,
      $Res Function(_$HttpStatusRequestUriTooLong) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusRequestUriTooLong extends HttpStatusRequestUriTooLong {
  const _$HttpStatusRequestUriTooLong() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusRequestUriTooLong);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return requestUriTooLong();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return requestUriTooLong?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (requestUriTooLong != null) {
      return requestUriTooLong();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return requestUriTooLong(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return requestUriTooLong?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (requestUriTooLong != null) {
      return requestUriTooLong(this);
    }
    return orElse();
  }
}

abstract class HttpStatusRequestUriTooLong extends HttpStatus {
  const factory HttpStatusRequestUriTooLong() = _$HttpStatusRequestUriTooLong;
  const HttpStatusRequestUriTooLong._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusUnsupportedMediaTypeCopyWith<$Res> {
  factory _$$HttpStatusUnsupportedMediaTypeCopyWith(
          _$HttpStatusUnsupportedMediaType value,
          $Res Function(_$HttpStatusUnsupportedMediaType) then) =
      __$$HttpStatusUnsupportedMediaTypeCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusUnsupportedMediaTypeCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusUnsupportedMediaType>
    implements _$$HttpStatusUnsupportedMediaTypeCopyWith<$Res> {
  __$$HttpStatusUnsupportedMediaTypeCopyWithImpl(
      _$HttpStatusUnsupportedMediaType _value,
      $Res Function(_$HttpStatusUnsupportedMediaType) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusUnsupportedMediaType extends HttpStatusUnsupportedMediaType {
  const _$HttpStatusUnsupportedMediaType() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusUnsupportedMediaType);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return unsupportedMediaType();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return unsupportedMediaType?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (unsupportedMediaType != null) {
      return unsupportedMediaType();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return unsupportedMediaType(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return unsupportedMediaType?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (unsupportedMediaType != null) {
      return unsupportedMediaType(this);
    }
    return orElse();
  }
}

abstract class HttpStatusUnsupportedMediaType extends HttpStatus {
  const factory HttpStatusUnsupportedMediaType() =
      _$HttpStatusUnsupportedMediaType;
  const HttpStatusUnsupportedMediaType._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusRequestedRangeNotSatisfiableCopyWith<$Res> {
  factory _$$HttpStatusRequestedRangeNotSatisfiableCopyWith(
          _$HttpStatusRequestedRangeNotSatisfiable value,
          $Res Function(_$HttpStatusRequestedRangeNotSatisfiable) then) =
      __$$HttpStatusRequestedRangeNotSatisfiableCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusRequestedRangeNotSatisfiableCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res,
        _$HttpStatusRequestedRangeNotSatisfiable>
    implements _$$HttpStatusRequestedRangeNotSatisfiableCopyWith<$Res> {
  __$$HttpStatusRequestedRangeNotSatisfiableCopyWithImpl(
      _$HttpStatusRequestedRangeNotSatisfiable _value,
      $Res Function(_$HttpStatusRequestedRangeNotSatisfiable) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusRequestedRangeNotSatisfiable
    extends HttpStatusRequestedRangeNotSatisfiable {
  const _$HttpStatusRequestedRangeNotSatisfiable() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusRequestedRangeNotSatisfiable);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return requestedRangeNotSatisfiable();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return requestedRangeNotSatisfiable?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (requestedRangeNotSatisfiable != null) {
      return requestedRangeNotSatisfiable();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return requestedRangeNotSatisfiable(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return requestedRangeNotSatisfiable?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (requestedRangeNotSatisfiable != null) {
      return requestedRangeNotSatisfiable(this);
    }
    return orElse();
  }
}

abstract class HttpStatusRequestedRangeNotSatisfiable extends HttpStatus {
  const factory HttpStatusRequestedRangeNotSatisfiable() =
      _$HttpStatusRequestedRangeNotSatisfiable;
  const HttpStatusRequestedRangeNotSatisfiable._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusExpectationFailedCopyWith<$Res> {
  factory _$$HttpStatusExpectationFailedCopyWith(
          _$HttpStatusExpectationFailed value,
          $Res Function(_$HttpStatusExpectationFailed) then) =
      __$$HttpStatusExpectationFailedCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusExpectationFailedCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusExpectationFailed>
    implements _$$HttpStatusExpectationFailedCopyWith<$Res> {
  __$$HttpStatusExpectationFailedCopyWithImpl(
      _$HttpStatusExpectationFailed _value,
      $Res Function(_$HttpStatusExpectationFailed) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusExpectationFailed extends HttpStatusExpectationFailed {
  const _$HttpStatusExpectationFailed() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusExpectationFailed);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return expectationFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return expectationFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (expectationFailed != null) {
      return expectationFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return expectationFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return expectationFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (expectationFailed != null) {
      return expectationFailed(this);
    }
    return orElse();
  }
}

abstract class HttpStatusExpectationFailed extends HttpStatus {
  const factory HttpStatusExpectationFailed() = _$HttpStatusExpectationFailed;
  const HttpStatusExpectationFailed._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusMisdirectedRequestCopyWith<$Res> {
  factory _$$HttpStatusMisdirectedRequestCopyWith(
          _$HttpStatusMisdirectedRequest value,
          $Res Function(_$HttpStatusMisdirectedRequest) then) =
      __$$HttpStatusMisdirectedRequestCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusMisdirectedRequestCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusMisdirectedRequest>
    implements _$$HttpStatusMisdirectedRequestCopyWith<$Res> {
  __$$HttpStatusMisdirectedRequestCopyWithImpl(
      _$HttpStatusMisdirectedRequest _value,
      $Res Function(_$HttpStatusMisdirectedRequest) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusMisdirectedRequest extends HttpStatusMisdirectedRequest {
  const _$HttpStatusMisdirectedRequest() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusMisdirectedRequest);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return misdirectedRequest();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return misdirectedRequest?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (misdirectedRequest != null) {
      return misdirectedRequest();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return misdirectedRequest(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return misdirectedRequest?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (misdirectedRequest != null) {
      return misdirectedRequest(this);
    }
    return orElse();
  }
}

abstract class HttpStatusMisdirectedRequest extends HttpStatus {
  const factory HttpStatusMisdirectedRequest() = _$HttpStatusMisdirectedRequest;
  const HttpStatusMisdirectedRequest._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusUnprocessableEntityCopyWith<$Res> {
  factory _$$HttpStatusUnprocessableEntityCopyWith(
          _$HttpStatusUnprocessableEntity value,
          $Res Function(_$HttpStatusUnprocessableEntity) then) =
      __$$HttpStatusUnprocessableEntityCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusUnprocessableEntityCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusUnprocessableEntity>
    implements _$$HttpStatusUnprocessableEntityCopyWith<$Res> {
  __$$HttpStatusUnprocessableEntityCopyWithImpl(
      _$HttpStatusUnprocessableEntity _value,
      $Res Function(_$HttpStatusUnprocessableEntity) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusUnprocessableEntity extends HttpStatusUnprocessableEntity {
  const _$HttpStatusUnprocessableEntity() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusUnprocessableEntity);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return unprocessableEntity();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return unprocessableEntity?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (unprocessableEntity != null) {
      return unprocessableEntity();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return unprocessableEntity(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return unprocessableEntity?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (unprocessableEntity != null) {
      return unprocessableEntity(this);
    }
    return orElse();
  }
}

abstract class HttpStatusUnprocessableEntity extends HttpStatus {
  const factory HttpStatusUnprocessableEntity() =
      _$HttpStatusUnprocessableEntity;
  const HttpStatusUnprocessableEntity._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusLockedCopyWith<$Res> {
  factory _$$HttpStatusLockedCopyWith(
          _$HttpStatusLocked value, $Res Function(_$HttpStatusLocked) then) =
      __$$HttpStatusLockedCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusLockedCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusLocked>
    implements _$$HttpStatusLockedCopyWith<$Res> {
  __$$HttpStatusLockedCopyWithImpl(
      _$HttpStatusLocked _value, $Res Function(_$HttpStatusLocked) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusLocked extends HttpStatusLocked {
  const _$HttpStatusLocked() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$HttpStatusLocked);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return locked();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return locked?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (locked != null) {
      return locked();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return locked(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return locked?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (locked != null) {
      return locked(this);
    }
    return orElse();
  }
}

abstract class HttpStatusLocked extends HttpStatus {
  const factory HttpStatusLocked() = _$HttpStatusLocked;
  const HttpStatusLocked._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusFailedDependencyCopyWith<$Res> {
  factory _$$HttpStatusFailedDependencyCopyWith(
          _$HttpStatusFailedDependency value,
          $Res Function(_$HttpStatusFailedDependency) then) =
      __$$HttpStatusFailedDependencyCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusFailedDependencyCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusFailedDependency>
    implements _$$HttpStatusFailedDependencyCopyWith<$Res> {
  __$$HttpStatusFailedDependencyCopyWithImpl(
      _$HttpStatusFailedDependency _value,
      $Res Function(_$HttpStatusFailedDependency) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusFailedDependency extends HttpStatusFailedDependency {
  const _$HttpStatusFailedDependency() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusFailedDependency);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return failedDependency();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return failedDependency?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (failedDependency != null) {
      return failedDependency();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return failedDependency(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return failedDependency?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (failedDependency != null) {
      return failedDependency(this);
    }
    return orElse();
  }
}

abstract class HttpStatusFailedDependency extends HttpStatus {
  const factory HttpStatusFailedDependency() = _$HttpStatusFailedDependency;
  const HttpStatusFailedDependency._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusUpgradeRequiredCopyWith<$Res> {
  factory _$$HttpStatusUpgradeRequiredCopyWith(
          _$HttpStatusUpgradeRequired value,
          $Res Function(_$HttpStatusUpgradeRequired) then) =
      __$$HttpStatusUpgradeRequiredCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusUpgradeRequiredCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusUpgradeRequired>
    implements _$$HttpStatusUpgradeRequiredCopyWith<$Res> {
  __$$HttpStatusUpgradeRequiredCopyWithImpl(_$HttpStatusUpgradeRequired _value,
      $Res Function(_$HttpStatusUpgradeRequired) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusUpgradeRequired extends HttpStatusUpgradeRequired {
  const _$HttpStatusUpgradeRequired() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusUpgradeRequired);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return upgradeRequired();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return upgradeRequired?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (upgradeRequired != null) {
      return upgradeRequired();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return upgradeRequired(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return upgradeRequired?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (upgradeRequired != null) {
      return upgradeRequired(this);
    }
    return orElse();
  }
}

abstract class HttpStatusUpgradeRequired extends HttpStatus {
  const factory HttpStatusUpgradeRequired() = _$HttpStatusUpgradeRequired;
  const HttpStatusUpgradeRequired._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusPreconditionRequiredCopyWith<$Res> {
  factory _$$HttpStatusPreconditionRequiredCopyWith(
          _$HttpStatusPreconditionRequired value,
          $Res Function(_$HttpStatusPreconditionRequired) then) =
      __$$HttpStatusPreconditionRequiredCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusPreconditionRequiredCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusPreconditionRequired>
    implements _$$HttpStatusPreconditionRequiredCopyWith<$Res> {
  __$$HttpStatusPreconditionRequiredCopyWithImpl(
      _$HttpStatusPreconditionRequired _value,
      $Res Function(_$HttpStatusPreconditionRequired) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusPreconditionRequired extends HttpStatusPreconditionRequired {
  const _$HttpStatusPreconditionRequired() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusPreconditionRequired);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return preconditionRequired();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return preconditionRequired?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (preconditionRequired != null) {
      return preconditionRequired();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return preconditionRequired(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return preconditionRequired?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (preconditionRequired != null) {
      return preconditionRequired(this);
    }
    return orElse();
  }
}

abstract class HttpStatusPreconditionRequired extends HttpStatus {
  const factory HttpStatusPreconditionRequired() =
      _$HttpStatusPreconditionRequired;
  const HttpStatusPreconditionRequired._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusTooManyRequestsCopyWith<$Res> {
  factory _$$HttpStatusTooManyRequestsCopyWith(
          _$HttpStatusTooManyRequests value,
          $Res Function(_$HttpStatusTooManyRequests) then) =
      __$$HttpStatusTooManyRequestsCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusTooManyRequestsCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusTooManyRequests>
    implements _$$HttpStatusTooManyRequestsCopyWith<$Res> {
  __$$HttpStatusTooManyRequestsCopyWithImpl(_$HttpStatusTooManyRequests _value,
      $Res Function(_$HttpStatusTooManyRequests) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusTooManyRequests extends HttpStatusTooManyRequests {
  const _$HttpStatusTooManyRequests() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusTooManyRequests);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return tooManyRequests();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return tooManyRequests?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (tooManyRequests != null) {
      return tooManyRequests();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return tooManyRequests(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return tooManyRequests?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (tooManyRequests != null) {
      return tooManyRequests(this);
    }
    return orElse();
  }
}

abstract class HttpStatusTooManyRequests extends HttpStatus {
  const factory HttpStatusTooManyRequests() = _$HttpStatusTooManyRequests;
  const HttpStatusTooManyRequests._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusRequestHeaderFieldsTooLargeCopyWith<$Res> {
  factory _$$HttpStatusRequestHeaderFieldsTooLargeCopyWith(
          _$HttpStatusRequestHeaderFieldsTooLarge value,
          $Res Function(_$HttpStatusRequestHeaderFieldsTooLarge) then) =
      __$$HttpStatusRequestHeaderFieldsTooLargeCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusRequestHeaderFieldsTooLargeCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res,
        _$HttpStatusRequestHeaderFieldsTooLarge>
    implements _$$HttpStatusRequestHeaderFieldsTooLargeCopyWith<$Res> {
  __$$HttpStatusRequestHeaderFieldsTooLargeCopyWithImpl(
      _$HttpStatusRequestHeaderFieldsTooLarge _value,
      $Res Function(_$HttpStatusRequestHeaderFieldsTooLarge) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusRequestHeaderFieldsTooLarge
    extends HttpStatusRequestHeaderFieldsTooLarge {
  const _$HttpStatusRequestHeaderFieldsTooLarge() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusRequestHeaderFieldsTooLarge);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return requestHeaderFieldsTooLarge();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return requestHeaderFieldsTooLarge?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (requestHeaderFieldsTooLarge != null) {
      return requestHeaderFieldsTooLarge();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return requestHeaderFieldsTooLarge(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return requestHeaderFieldsTooLarge?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (requestHeaderFieldsTooLarge != null) {
      return requestHeaderFieldsTooLarge(this);
    }
    return orElse();
  }
}

abstract class HttpStatusRequestHeaderFieldsTooLarge extends HttpStatus {
  const factory HttpStatusRequestHeaderFieldsTooLarge() =
      _$HttpStatusRequestHeaderFieldsTooLarge;
  const HttpStatusRequestHeaderFieldsTooLarge._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusConnectionClosedWithoutResponseCopyWith<$Res> {
  factory _$$HttpStatusConnectionClosedWithoutResponseCopyWith(
          _$HttpStatusConnectionClosedWithoutResponse value,
          $Res Function(_$HttpStatusConnectionClosedWithoutResponse) then) =
      __$$HttpStatusConnectionClosedWithoutResponseCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusConnectionClosedWithoutResponseCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res,
        _$HttpStatusConnectionClosedWithoutResponse>
    implements _$$HttpStatusConnectionClosedWithoutResponseCopyWith<$Res> {
  __$$HttpStatusConnectionClosedWithoutResponseCopyWithImpl(
      _$HttpStatusConnectionClosedWithoutResponse _value,
      $Res Function(_$HttpStatusConnectionClosedWithoutResponse) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusConnectionClosedWithoutResponse
    extends HttpStatusConnectionClosedWithoutResponse {
  const _$HttpStatusConnectionClosedWithoutResponse() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusConnectionClosedWithoutResponse);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return connectionClosedWithoutResponse();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return connectionClosedWithoutResponse?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (connectionClosedWithoutResponse != null) {
      return connectionClosedWithoutResponse();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return connectionClosedWithoutResponse(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return connectionClosedWithoutResponse?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (connectionClosedWithoutResponse != null) {
      return connectionClosedWithoutResponse(this);
    }
    return orElse();
  }
}

abstract class HttpStatusConnectionClosedWithoutResponse extends HttpStatus {
  const factory HttpStatusConnectionClosedWithoutResponse() =
      _$HttpStatusConnectionClosedWithoutResponse;
  const HttpStatusConnectionClosedWithoutResponse._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusUnavailableForLegalReasonsCopyWith<$Res> {
  factory _$$HttpStatusUnavailableForLegalReasonsCopyWith(
          _$HttpStatusUnavailableForLegalReasons value,
          $Res Function(_$HttpStatusUnavailableForLegalReasons) then) =
      __$$HttpStatusUnavailableForLegalReasonsCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusUnavailableForLegalReasonsCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res,
        _$HttpStatusUnavailableForLegalReasons>
    implements _$$HttpStatusUnavailableForLegalReasonsCopyWith<$Res> {
  __$$HttpStatusUnavailableForLegalReasonsCopyWithImpl(
      _$HttpStatusUnavailableForLegalReasons _value,
      $Res Function(_$HttpStatusUnavailableForLegalReasons) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusUnavailableForLegalReasons
    extends HttpStatusUnavailableForLegalReasons {
  const _$HttpStatusUnavailableForLegalReasons() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusUnavailableForLegalReasons);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return unavailableForLegalReasons();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return unavailableForLegalReasons?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (unavailableForLegalReasons != null) {
      return unavailableForLegalReasons();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return unavailableForLegalReasons(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return unavailableForLegalReasons?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (unavailableForLegalReasons != null) {
      return unavailableForLegalReasons(this);
    }
    return orElse();
  }
}

abstract class HttpStatusUnavailableForLegalReasons extends HttpStatus {
  const factory HttpStatusUnavailableForLegalReasons() =
      _$HttpStatusUnavailableForLegalReasons;
  const HttpStatusUnavailableForLegalReasons._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusClientClosedRequestCopyWith<$Res> {
  factory _$$HttpStatusClientClosedRequestCopyWith(
          _$HttpStatusClientClosedRequest value,
          $Res Function(_$HttpStatusClientClosedRequest) then) =
      __$$HttpStatusClientClosedRequestCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusClientClosedRequestCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusClientClosedRequest>
    implements _$$HttpStatusClientClosedRequestCopyWith<$Res> {
  __$$HttpStatusClientClosedRequestCopyWithImpl(
      _$HttpStatusClientClosedRequest _value,
      $Res Function(_$HttpStatusClientClosedRequest) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusClientClosedRequest extends HttpStatusClientClosedRequest {
  const _$HttpStatusClientClosedRequest() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusClientClosedRequest);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return clientClosedRequest();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return clientClosedRequest?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (clientClosedRequest != null) {
      return clientClosedRequest();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return clientClosedRequest(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return clientClosedRequest?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (clientClosedRequest != null) {
      return clientClosedRequest(this);
    }
    return orElse();
  }
}

abstract class HttpStatusClientClosedRequest extends HttpStatus {
  const factory HttpStatusClientClosedRequest() =
      _$HttpStatusClientClosedRequest;
  const HttpStatusClientClosedRequest._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusInternalServerErrorCopyWith<$Res> {
  factory _$$HttpStatusInternalServerErrorCopyWith(
          _$HttpStatusInternalServerError value,
          $Res Function(_$HttpStatusInternalServerError) then) =
      __$$HttpStatusInternalServerErrorCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusInternalServerErrorCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusInternalServerError>
    implements _$$HttpStatusInternalServerErrorCopyWith<$Res> {
  __$$HttpStatusInternalServerErrorCopyWithImpl(
      _$HttpStatusInternalServerError _value,
      $Res Function(_$HttpStatusInternalServerError) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusInternalServerError extends HttpStatusInternalServerError {
  const _$HttpStatusInternalServerError() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusInternalServerError);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return internalServerError();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return internalServerError?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (internalServerError != null) {
      return internalServerError();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return internalServerError(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return internalServerError?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (internalServerError != null) {
      return internalServerError(this);
    }
    return orElse();
  }
}

abstract class HttpStatusInternalServerError extends HttpStatus {
  const factory HttpStatusInternalServerError() =
      _$HttpStatusInternalServerError;
  const HttpStatusInternalServerError._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusNotImplementedCopyWith<$Res> {
  factory _$$HttpStatusNotImplementedCopyWith(_$HttpStatusNotImplemented value,
          $Res Function(_$HttpStatusNotImplemented) then) =
      __$$HttpStatusNotImplementedCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusNotImplementedCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusNotImplemented>
    implements _$$HttpStatusNotImplementedCopyWith<$Res> {
  __$$HttpStatusNotImplementedCopyWithImpl(_$HttpStatusNotImplemented _value,
      $Res Function(_$HttpStatusNotImplemented) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusNotImplemented extends HttpStatusNotImplemented {
  const _$HttpStatusNotImplemented() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusNotImplemented);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return notImplemented();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return notImplemented?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (notImplemented != null) {
      return notImplemented();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return notImplemented(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return notImplemented?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (notImplemented != null) {
      return notImplemented(this);
    }
    return orElse();
  }
}

abstract class HttpStatusNotImplemented extends HttpStatus {
  const factory HttpStatusNotImplemented() = _$HttpStatusNotImplemented;
  const HttpStatusNotImplemented._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusBadGatewayCopyWith<$Res> {
  factory _$$HttpStatusBadGatewayCopyWith(_$HttpStatusBadGateway value,
          $Res Function(_$HttpStatusBadGateway) then) =
      __$$HttpStatusBadGatewayCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusBadGatewayCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusBadGateway>
    implements _$$HttpStatusBadGatewayCopyWith<$Res> {
  __$$HttpStatusBadGatewayCopyWithImpl(_$HttpStatusBadGateway _value,
      $Res Function(_$HttpStatusBadGateway) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusBadGateway extends HttpStatusBadGateway {
  const _$HttpStatusBadGateway() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$HttpStatusBadGateway);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return badGateway();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return badGateway?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (badGateway != null) {
      return badGateway();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return badGateway(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return badGateway?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (badGateway != null) {
      return badGateway(this);
    }
    return orElse();
  }
}

abstract class HttpStatusBadGateway extends HttpStatus {
  const factory HttpStatusBadGateway() = _$HttpStatusBadGateway;
  const HttpStatusBadGateway._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusServiceUnavailableCopyWith<$Res> {
  factory _$$HttpStatusServiceUnavailableCopyWith(
          _$HttpStatusServiceUnavailable value,
          $Res Function(_$HttpStatusServiceUnavailable) then) =
      __$$HttpStatusServiceUnavailableCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusServiceUnavailableCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusServiceUnavailable>
    implements _$$HttpStatusServiceUnavailableCopyWith<$Res> {
  __$$HttpStatusServiceUnavailableCopyWithImpl(
      _$HttpStatusServiceUnavailable _value,
      $Res Function(_$HttpStatusServiceUnavailable) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusServiceUnavailable extends HttpStatusServiceUnavailable {
  const _$HttpStatusServiceUnavailable() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusServiceUnavailable);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return serviceUnavailable();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return serviceUnavailable?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (serviceUnavailable != null) {
      return serviceUnavailable();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return serviceUnavailable(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return serviceUnavailable?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (serviceUnavailable != null) {
      return serviceUnavailable(this);
    }
    return orElse();
  }
}

abstract class HttpStatusServiceUnavailable extends HttpStatus {
  const factory HttpStatusServiceUnavailable() = _$HttpStatusServiceUnavailable;
  const HttpStatusServiceUnavailable._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusGatewayTimeoutCopyWith<$Res> {
  factory _$$HttpStatusGatewayTimeoutCopyWith(_$HttpStatusGatewayTimeout value,
          $Res Function(_$HttpStatusGatewayTimeout) then) =
      __$$HttpStatusGatewayTimeoutCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusGatewayTimeoutCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusGatewayTimeout>
    implements _$$HttpStatusGatewayTimeoutCopyWith<$Res> {
  __$$HttpStatusGatewayTimeoutCopyWithImpl(_$HttpStatusGatewayTimeout _value,
      $Res Function(_$HttpStatusGatewayTimeout) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusGatewayTimeout extends HttpStatusGatewayTimeout {
  const _$HttpStatusGatewayTimeout() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusGatewayTimeout);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return gatewayTimeout();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return gatewayTimeout?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (gatewayTimeout != null) {
      return gatewayTimeout();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return gatewayTimeout(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return gatewayTimeout?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (gatewayTimeout != null) {
      return gatewayTimeout(this);
    }
    return orElse();
  }
}

abstract class HttpStatusGatewayTimeout extends HttpStatus {
  const factory HttpStatusGatewayTimeout() = _$HttpStatusGatewayTimeout;
  const HttpStatusGatewayTimeout._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusHttpVersionNotSupportedCopyWith<$Res> {
  factory _$$HttpStatusHttpVersionNotSupportedCopyWith(
          _$HttpStatusHttpVersionNotSupported value,
          $Res Function(_$HttpStatusHttpVersionNotSupported) then) =
      __$$HttpStatusHttpVersionNotSupportedCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusHttpVersionNotSupportedCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusHttpVersionNotSupported>
    implements _$$HttpStatusHttpVersionNotSupportedCopyWith<$Res> {
  __$$HttpStatusHttpVersionNotSupportedCopyWithImpl(
      _$HttpStatusHttpVersionNotSupported _value,
      $Res Function(_$HttpStatusHttpVersionNotSupported) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusHttpVersionNotSupported
    extends HttpStatusHttpVersionNotSupported {
  const _$HttpStatusHttpVersionNotSupported() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusHttpVersionNotSupported);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return httpVersionNotSupported();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return httpVersionNotSupported?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (httpVersionNotSupported != null) {
      return httpVersionNotSupported();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return httpVersionNotSupported(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return httpVersionNotSupported?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (httpVersionNotSupported != null) {
      return httpVersionNotSupported(this);
    }
    return orElse();
  }
}

abstract class HttpStatusHttpVersionNotSupported extends HttpStatus {
  const factory HttpStatusHttpVersionNotSupported() =
      _$HttpStatusHttpVersionNotSupported;
  const HttpStatusHttpVersionNotSupported._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusVariantAlsoNegotiatesCopyWith<$Res> {
  factory _$$HttpStatusVariantAlsoNegotiatesCopyWith(
          _$HttpStatusVariantAlsoNegotiates value,
          $Res Function(_$HttpStatusVariantAlsoNegotiates) then) =
      __$$HttpStatusVariantAlsoNegotiatesCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusVariantAlsoNegotiatesCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusVariantAlsoNegotiates>
    implements _$$HttpStatusVariantAlsoNegotiatesCopyWith<$Res> {
  __$$HttpStatusVariantAlsoNegotiatesCopyWithImpl(
      _$HttpStatusVariantAlsoNegotiates _value,
      $Res Function(_$HttpStatusVariantAlsoNegotiates) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusVariantAlsoNegotiates
    extends HttpStatusVariantAlsoNegotiates {
  const _$HttpStatusVariantAlsoNegotiates() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusVariantAlsoNegotiates);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return variantAlsoNegotiates();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return variantAlsoNegotiates?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (variantAlsoNegotiates != null) {
      return variantAlsoNegotiates();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return variantAlsoNegotiates(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return variantAlsoNegotiates?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (variantAlsoNegotiates != null) {
      return variantAlsoNegotiates(this);
    }
    return orElse();
  }
}

abstract class HttpStatusVariantAlsoNegotiates extends HttpStatus {
  const factory HttpStatusVariantAlsoNegotiates() =
      _$HttpStatusVariantAlsoNegotiates;
  const HttpStatusVariantAlsoNegotiates._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusInsufficientStorageCopyWith<$Res> {
  factory _$$HttpStatusInsufficientStorageCopyWith(
          _$HttpStatusInsufficientStorage value,
          $Res Function(_$HttpStatusInsufficientStorage) then) =
      __$$HttpStatusInsufficientStorageCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusInsufficientStorageCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusInsufficientStorage>
    implements _$$HttpStatusInsufficientStorageCopyWith<$Res> {
  __$$HttpStatusInsufficientStorageCopyWithImpl(
      _$HttpStatusInsufficientStorage _value,
      $Res Function(_$HttpStatusInsufficientStorage) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusInsufficientStorage extends HttpStatusInsufficientStorage {
  const _$HttpStatusInsufficientStorage() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusInsufficientStorage);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return insufficientStorage();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return insufficientStorage?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (insufficientStorage != null) {
      return insufficientStorage();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return insufficientStorage(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return insufficientStorage?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (insufficientStorage != null) {
      return insufficientStorage(this);
    }
    return orElse();
  }
}

abstract class HttpStatusInsufficientStorage extends HttpStatus {
  const factory HttpStatusInsufficientStorage() =
      _$HttpStatusInsufficientStorage;
  const HttpStatusInsufficientStorage._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusLoopDetectedCopyWith<$Res> {
  factory _$$HttpStatusLoopDetectedCopyWith(_$HttpStatusLoopDetected value,
          $Res Function(_$HttpStatusLoopDetected) then) =
      __$$HttpStatusLoopDetectedCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusLoopDetectedCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusLoopDetected>
    implements _$$HttpStatusLoopDetectedCopyWith<$Res> {
  __$$HttpStatusLoopDetectedCopyWithImpl(_$HttpStatusLoopDetected _value,
      $Res Function(_$HttpStatusLoopDetected) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusLoopDetected extends HttpStatusLoopDetected {
  const _$HttpStatusLoopDetected() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$HttpStatusLoopDetected);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return loopDetected();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return loopDetected?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (loopDetected != null) {
      return loopDetected();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return loopDetected(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return loopDetected?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (loopDetected != null) {
      return loopDetected(this);
    }
    return orElse();
  }
}

abstract class HttpStatusLoopDetected extends HttpStatus {
  const factory HttpStatusLoopDetected() = _$HttpStatusLoopDetected;
  const HttpStatusLoopDetected._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusNotExtendedCopyWith<$Res> {
  factory _$$HttpStatusNotExtendedCopyWith(_$HttpStatusNotExtended value,
          $Res Function(_$HttpStatusNotExtended) then) =
      __$$HttpStatusNotExtendedCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusNotExtendedCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res, _$HttpStatusNotExtended>
    implements _$$HttpStatusNotExtendedCopyWith<$Res> {
  __$$HttpStatusNotExtendedCopyWithImpl(_$HttpStatusNotExtended _value,
      $Res Function(_$HttpStatusNotExtended) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusNotExtended extends HttpStatusNotExtended {
  const _$HttpStatusNotExtended() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$HttpStatusNotExtended);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return notExtended();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return notExtended?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (notExtended != null) {
      return notExtended();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return notExtended(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return notExtended?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (notExtended != null) {
      return notExtended(this);
    }
    return orElse();
  }
}

abstract class HttpStatusNotExtended extends HttpStatus {
  const factory HttpStatusNotExtended() = _$HttpStatusNotExtended;
  const HttpStatusNotExtended._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusNetworkAuthenticationRequiredCopyWith<$Res> {
  factory _$$HttpStatusNetworkAuthenticationRequiredCopyWith(
          _$HttpStatusNetworkAuthenticationRequired value,
          $Res Function(_$HttpStatusNetworkAuthenticationRequired) then) =
      __$$HttpStatusNetworkAuthenticationRequiredCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusNetworkAuthenticationRequiredCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res,
        _$HttpStatusNetworkAuthenticationRequired>
    implements _$$HttpStatusNetworkAuthenticationRequiredCopyWith<$Res> {
  __$$HttpStatusNetworkAuthenticationRequiredCopyWithImpl(
      _$HttpStatusNetworkAuthenticationRequired _value,
      $Res Function(_$HttpStatusNetworkAuthenticationRequired) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusNetworkAuthenticationRequired
    extends HttpStatusNetworkAuthenticationRequired {
  const _$HttpStatusNetworkAuthenticationRequired() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusNetworkAuthenticationRequired);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return networkAuthenticationRequired();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return networkAuthenticationRequired?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (networkAuthenticationRequired != null) {
      return networkAuthenticationRequired();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return networkAuthenticationRequired(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return networkAuthenticationRequired?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (networkAuthenticationRequired != null) {
      return networkAuthenticationRequired(this);
    }
    return orElse();
  }
}

abstract class HttpStatusNetworkAuthenticationRequired extends HttpStatus {
  const factory HttpStatusNetworkAuthenticationRequired() =
      _$HttpStatusNetworkAuthenticationRequired;
  const HttpStatusNetworkAuthenticationRequired._() : super._();
}

/// @nodoc
abstract class _$$HttpStatusNetworkConnectTimeoutErrorCopyWith<$Res> {
  factory _$$HttpStatusNetworkConnectTimeoutErrorCopyWith(
          _$HttpStatusNetworkConnectTimeoutError value,
          $Res Function(_$HttpStatusNetworkConnectTimeoutError) then) =
      __$$HttpStatusNetworkConnectTimeoutErrorCopyWithImpl<$Res>;
}

/// @nodoc
class __$$HttpStatusNetworkConnectTimeoutErrorCopyWithImpl<$Res>
    extends _$HttpStatusCopyWithImpl<$Res,
        _$HttpStatusNetworkConnectTimeoutError>
    implements _$$HttpStatusNetworkConnectTimeoutErrorCopyWith<$Res> {
  __$$HttpStatusNetworkConnectTimeoutErrorCopyWithImpl(
      _$HttpStatusNetworkConnectTimeoutError _value,
      $Res Function(_$HttpStatusNetworkConnectTimeoutError) _then)
      : super(_value, _then);
}

/// @nodoc

class _$HttpStatusNetworkConnectTimeoutError
    extends HttpStatusNetworkConnectTimeoutError {
  const _$HttpStatusNetworkConnectTimeoutError() : super._();

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$HttpStatusNetworkConnectTimeoutError);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() continues,
    required TResult Function() switchingProtocols,
    required TResult Function() processing,
    required TResult Function() ok,
    required TResult Function() created,
    required TResult Function() accepted,
    required TResult Function() nonAuthoritativeInformation,
    required TResult Function() noContent,
    required TResult Function() resetContent,
    required TResult Function() partialContent,
    required TResult Function() multiStatus,
    required TResult Function() alreadyReported,
    required TResult Function() imUsed,
    required TResult Function() multipleChoices,
    required TResult Function() movedPermanently,
    required TResult Function() found,
    required TResult Function() seeOther,
    required TResult Function() notModified,
    required TResult Function() useProxy,
    required TResult Function() temporaryRedirect,
    required TResult Function() permanentRedirect,
    required TResult Function() badRequest,
    required TResult Function() unauthorized,
    required TResult Function() paymentRequired,
    required TResult Function() forbidden,
    required TResult Function() notFound,
    required TResult Function() methodNotAllowed,
    required TResult Function() notAcceptable,
    required TResult Function() proxyAuthenticationRequired,
    required TResult Function() requestTimeout,
    required TResult Function() conflict,
    required TResult Function() gone,
    required TResult Function() lengthRequired,
    required TResult Function() preconditionFailed,
    required TResult Function() requestEntityTooLarge,
    required TResult Function() requestUriTooLong,
    required TResult Function() unsupportedMediaType,
    required TResult Function() requestedRangeNotSatisfiable,
    required TResult Function() expectationFailed,
    required TResult Function() misdirectedRequest,
    required TResult Function() unprocessableEntity,
    required TResult Function() locked,
    required TResult Function() failedDependency,
    required TResult Function() upgradeRequired,
    required TResult Function() preconditionRequired,
    required TResult Function() tooManyRequests,
    required TResult Function() requestHeaderFieldsTooLarge,
    required TResult Function() connectionClosedWithoutResponse,
    required TResult Function() unavailableForLegalReasons,
    required TResult Function() clientClosedRequest,
    required TResult Function() internalServerError,
    required TResult Function() notImplemented,
    required TResult Function() badGateway,
    required TResult Function() serviceUnavailable,
    required TResult Function() gatewayTimeout,
    required TResult Function() httpVersionNotSupported,
    required TResult Function() variantAlsoNegotiates,
    required TResult Function() insufficientStorage,
    required TResult Function() loopDetected,
    required TResult Function() notExtended,
    required TResult Function() networkAuthenticationRequired,
    required TResult Function() networkConnectTimeoutError,
  }) {
    return networkConnectTimeoutError();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? continues,
    TResult? Function()? switchingProtocols,
    TResult? Function()? processing,
    TResult? Function()? ok,
    TResult? Function()? created,
    TResult? Function()? accepted,
    TResult? Function()? nonAuthoritativeInformation,
    TResult? Function()? noContent,
    TResult? Function()? resetContent,
    TResult? Function()? partialContent,
    TResult? Function()? multiStatus,
    TResult? Function()? alreadyReported,
    TResult? Function()? imUsed,
    TResult? Function()? multipleChoices,
    TResult? Function()? movedPermanently,
    TResult? Function()? found,
    TResult? Function()? seeOther,
    TResult? Function()? notModified,
    TResult? Function()? useProxy,
    TResult? Function()? temporaryRedirect,
    TResult? Function()? permanentRedirect,
    TResult? Function()? badRequest,
    TResult? Function()? unauthorized,
    TResult? Function()? paymentRequired,
    TResult? Function()? forbidden,
    TResult? Function()? notFound,
    TResult? Function()? methodNotAllowed,
    TResult? Function()? notAcceptable,
    TResult? Function()? proxyAuthenticationRequired,
    TResult? Function()? requestTimeout,
    TResult? Function()? conflict,
    TResult? Function()? gone,
    TResult? Function()? lengthRequired,
    TResult? Function()? preconditionFailed,
    TResult? Function()? requestEntityTooLarge,
    TResult? Function()? requestUriTooLong,
    TResult? Function()? unsupportedMediaType,
    TResult? Function()? requestedRangeNotSatisfiable,
    TResult? Function()? expectationFailed,
    TResult? Function()? misdirectedRequest,
    TResult? Function()? unprocessableEntity,
    TResult? Function()? locked,
    TResult? Function()? failedDependency,
    TResult? Function()? upgradeRequired,
    TResult? Function()? preconditionRequired,
    TResult? Function()? tooManyRequests,
    TResult? Function()? requestHeaderFieldsTooLarge,
    TResult? Function()? connectionClosedWithoutResponse,
    TResult? Function()? unavailableForLegalReasons,
    TResult? Function()? clientClosedRequest,
    TResult? Function()? internalServerError,
    TResult? Function()? notImplemented,
    TResult? Function()? badGateway,
    TResult? Function()? serviceUnavailable,
    TResult? Function()? gatewayTimeout,
    TResult? Function()? httpVersionNotSupported,
    TResult? Function()? variantAlsoNegotiates,
    TResult? Function()? insufficientStorage,
    TResult? Function()? loopDetected,
    TResult? Function()? notExtended,
    TResult? Function()? networkAuthenticationRequired,
    TResult? Function()? networkConnectTimeoutError,
  }) {
    return networkConnectTimeoutError?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? continues,
    TResult Function()? switchingProtocols,
    TResult Function()? processing,
    TResult Function()? ok,
    TResult Function()? created,
    TResult Function()? accepted,
    TResult Function()? nonAuthoritativeInformation,
    TResult Function()? noContent,
    TResult Function()? resetContent,
    TResult Function()? partialContent,
    TResult Function()? multiStatus,
    TResult Function()? alreadyReported,
    TResult Function()? imUsed,
    TResult Function()? multipleChoices,
    TResult Function()? movedPermanently,
    TResult Function()? found,
    TResult Function()? seeOther,
    TResult Function()? notModified,
    TResult Function()? useProxy,
    TResult Function()? temporaryRedirect,
    TResult Function()? permanentRedirect,
    TResult Function()? badRequest,
    TResult Function()? unauthorized,
    TResult Function()? paymentRequired,
    TResult Function()? forbidden,
    TResult Function()? notFound,
    TResult Function()? methodNotAllowed,
    TResult Function()? notAcceptable,
    TResult Function()? proxyAuthenticationRequired,
    TResult Function()? requestTimeout,
    TResult Function()? conflict,
    TResult Function()? gone,
    TResult Function()? lengthRequired,
    TResult Function()? preconditionFailed,
    TResult Function()? requestEntityTooLarge,
    TResult Function()? requestUriTooLong,
    TResult Function()? unsupportedMediaType,
    TResult Function()? requestedRangeNotSatisfiable,
    TResult Function()? expectationFailed,
    TResult Function()? misdirectedRequest,
    TResult Function()? unprocessableEntity,
    TResult Function()? locked,
    TResult Function()? failedDependency,
    TResult Function()? upgradeRequired,
    TResult Function()? preconditionRequired,
    TResult Function()? tooManyRequests,
    TResult Function()? requestHeaderFieldsTooLarge,
    TResult Function()? connectionClosedWithoutResponse,
    TResult Function()? unavailableForLegalReasons,
    TResult Function()? clientClosedRequest,
    TResult Function()? internalServerError,
    TResult Function()? notImplemented,
    TResult Function()? badGateway,
    TResult Function()? serviceUnavailable,
    TResult Function()? gatewayTimeout,
    TResult Function()? httpVersionNotSupported,
    TResult Function()? variantAlsoNegotiates,
    TResult Function()? insufficientStorage,
    TResult Function()? loopDetected,
    TResult Function()? notExtended,
    TResult Function()? networkAuthenticationRequired,
    TResult Function()? networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (networkConnectTimeoutError != null) {
      return networkConnectTimeoutError();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(HttpStatusContinue value) continues,
    required TResult Function(HttpStatusSwitchingProtocols value)
        switchingProtocols,
    required TResult Function(HttpStatusProcessing value) processing,
    required TResult Function(HttpStatusOk value) ok,
    required TResult Function(HttpStatusCreated value) created,
    required TResult Function(HttpStatusAccepted value) accepted,
    required TResult Function(HttpStatusNonAuthoritativeInformation value)
        nonAuthoritativeInformation,
    required TResult Function(HttpStatusNoContent value) noContent,
    required TResult Function(HttpStatusResetContent value) resetContent,
    required TResult Function(HttpStatusPartialContent value) partialContent,
    required TResult Function(HttpStatusMultiStatus value) multiStatus,
    required TResult Function(HttpStatusAlreadyReported value) alreadyReported,
    required TResult Function(HttpStatusImUsed value) imUsed,
    required TResult Function(HttpStatusMultipleChoices value) multipleChoices,
    required TResult Function(HttpStatusMovedPermanently value)
        movedPermanently,
    required TResult Function(HttpStatusFound value) found,
    required TResult Function(HttpStatusSeeOther value) seeOther,
    required TResult Function(HttpStatusNotModified value) notModified,
    required TResult Function(HttpStatusUseProxy value) useProxy,
    required TResult Function(HttpStatusTemporaryRedirect value)
        temporaryRedirect,
    required TResult Function(HttpStatusPermanentRedirect value)
        permanentRedirect,
    required TResult Function(HttpStatusBadRequest value) badRequest,
    required TResult Function(HttpStatusUnauthorized value) unauthorized,
    required TResult Function(HttpStatusPaymentRequeired value) paymentRequired,
    required TResult Function(HttpStatusForbidden value) forbidden,
    required TResult Function(HttpStatusNotFound value) notFound,
    required TResult Function(HttpStatusMethodNotAllowed value)
        methodNotAllowed,
    required TResult Function(HttpStatusNotAcceptable value) notAcceptable,
    required TResult Function(HttpStatusProxyAuthenticationRequired value)
        proxyAuthenticationRequired,
    required TResult Function(HttpStatusRequestTimeout value) requestTimeout,
    required TResult Function(HttpStatusConflict value) conflict,
    required TResult Function(HttpStatusGone value) gone,
    required TResult Function(HttpStatusLengthRequired value) lengthRequired,
    required TResult Function(HttpStatusPreconditionFailed value)
        preconditionFailed,
    required TResult Function(HttpStatusRequestEntityTooLarge value)
        requestEntityTooLarge,
    required TResult Function(HttpStatusRequestUriTooLong value)
        requestUriTooLong,
    required TResult Function(HttpStatusUnsupportedMediaType value)
        unsupportedMediaType,
    required TResult Function(HttpStatusRequestedRangeNotSatisfiable value)
        requestedRangeNotSatisfiable,
    required TResult Function(HttpStatusExpectationFailed value)
        expectationFailed,
    required TResult Function(HttpStatusMisdirectedRequest value)
        misdirectedRequest,
    required TResult Function(HttpStatusUnprocessableEntity value)
        unprocessableEntity,
    required TResult Function(HttpStatusLocked value) locked,
    required TResult Function(HttpStatusFailedDependency value)
        failedDependency,
    required TResult Function(HttpStatusUpgradeRequired value) upgradeRequired,
    required TResult Function(HttpStatusPreconditionRequired value)
        preconditionRequired,
    required TResult Function(HttpStatusTooManyRequests value) tooManyRequests,
    required TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)
        requestHeaderFieldsTooLarge,
    required TResult Function(HttpStatusConnectionClosedWithoutResponse value)
        connectionClosedWithoutResponse,
    required TResult Function(HttpStatusUnavailableForLegalReasons value)
        unavailableForLegalReasons,
    required TResult Function(HttpStatusClientClosedRequest value)
        clientClosedRequest,
    required TResult Function(HttpStatusInternalServerError value)
        internalServerError,
    required TResult Function(HttpStatusNotImplemented value) notImplemented,
    required TResult Function(HttpStatusBadGateway value) badGateway,
    required TResult Function(HttpStatusServiceUnavailable value)
        serviceUnavailable,
    required TResult Function(HttpStatusGatewayTimeout value) gatewayTimeout,
    required TResult Function(HttpStatusHttpVersionNotSupported value)
        httpVersionNotSupported,
    required TResult Function(HttpStatusVariantAlsoNegotiates value)
        variantAlsoNegotiates,
    required TResult Function(HttpStatusInsufficientStorage value)
        insufficientStorage,
    required TResult Function(HttpStatusLoopDetected value) loopDetected,
    required TResult Function(HttpStatusNotExtended value) notExtended,
    required TResult Function(HttpStatusNetworkAuthenticationRequired value)
        networkAuthenticationRequired,
    required TResult Function(HttpStatusNetworkConnectTimeoutError value)
        networkConnectTimeoutError,
  }) {
    return networkConnectTimeoutError(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(HttpStatusContinue value)? continues,
    TResult? Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult? Function(HttpStatusProcessing value)? processing,
    TResult? Function(HttpStatusOk value)? ok,
    TResult? Function(HttpStatusCreated value)? created,
    TResult? Function(HttpStatusAccepted value)? accepted,
    TResult? Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult? Function(HttpStatusNoContent value)? noContent,
    TResult? Function(HttpStatusResetContent value)? resetContent,
    TResult? Function(HttpStatusPartialContent value)? partialContent,
    TResult? Function(HttpStatusMultiStatus value)? multiStatus,
    TResult? Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult? Function(HttpStatusImUsed value)? imUsed,
    TResult? Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult? Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult? Function(HttpStatusFound value)? found,
    TResult? Function(HttpStatusSeeOther value)? seeOther,
    TResult? Function(HttpStatusNotModified value)? notModified,
    TResult? Function(HttpStatusUseProxy value)? useProxy,
    TResult? Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult? Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult? Function(HttpStatusBadRequest value)? badRequest,
    TResult? Function(HttpStatusUnauthorized value)? unauthorized,
    TResult? Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult? Function(HttpStatusForbidden value)? forbidden,
    TResult? Function(HttpStatusNotFound value)? notFound,
    TResult? Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult? Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult? Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult? Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult? Function(HttpStatusConflict value)? conflict,
    TResult? Function(HttpStatusGone value)? gone,
    TResult? Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult? Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult? Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult? Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult? Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult? Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult? Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult? Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult? Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult? Function(HttpStatusLocked value)? locked,
    TResult? Function(HttpStatusFailedDependency value)? failedDependency,
    TResult? Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult? Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult? Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult? Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult? Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult? Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult? Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult? Function(HttpStatusInternalServerError value)? internalServerError,
    TResult? Function(HttpStatusNotImplemented value)? notImplemented,
    TResult? Function(HttpStatusBadGateway value)? badGateway,
    TResult? Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult? Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult? Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult? Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult? Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult? Function(HttpStatusLoopDetected value)? loopDetected,
    TResult? Function(HttpStatusNotExtended value)? notExtended,
    TResult? Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult? Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
  }) {
    return networkConnectTimeoutError?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(HttpStatusContinue value)? continues,
    TResult Function(HttpStatusSwitchingProtocols value)? switchingProtocols,
    TResult Function(HttpStatusProcessing value)? processing,
    TResult Function(HttpStatusOk value)? ok,
    TResult Function(HttpStatusCreated value)? created,
    TResult Function(HttpStatusAccepted value)? accepted,
    TResult Function(HttpStatusNonAuthoritativeInformation value)?
        nonAuthoritativeInformation,
    TResult Function(HttpStatusNoContent value)? noContent,
    TResult Function(HttpStatusResetContent value)? resetContent,
    TResult Function(HttpStatusPartialContent value)? partialContent,
    TResult Function(HttpStatusMultiStatus value)? multiStatus,
    TResult Function(HttpStatusAlreadyReported value)? alreadyReported,
    TResult Function(HttpStatusImUsed value)? imUsed,
    TResult Function(HttpStatusMultipleChoices value)? multipleChoices,
    TResult Function(HttpStatusMovedPermanently value)? movedPermanently,
    TResult Function(HttpStatusFound value)? found,
    TResult Function(HttpStatusSeeOther value)? seeOther,
    TResult Function(HttpStatusNotModified value)? notModified,
    TResult Function(HttpStatusUseProxy value)? useProxy,
    TResult Function(HttpStatusTemporaryRedirect value)? temporaryRedirect,
    TResult Function(HttpStatusPermanentRedirect value)? permanentRedirect,
    TResult Function(HttpStatusBadRequest value)? badRequest,
    TResult Function(HttpStatusUnauthorized value)? unauthorized,
    TResult Function(HttpStatusPaymentRequeired value)? paymentRequired,
    TResult Function(HttpStatusForbidden value)? forbidden,
    TResult Function(HttpStatusNotFound value)? notFound,
    TResult Function(HttpStatusMethodNotAllowed value)? methodNotAllowed,
    TResult Function(HttpStatusNotAcceptable value)? notAcceptable,
    TResult Function(HttpStatusProxyAuthenticationRequired value)?
        proxyAuthenticationRequired,
    TResult Function(HttpStatusRequestTimeout value)? requestTimeout,
    TResult Function(HttpStatusConflict value)? conflict,
    TResult Function(HttpStatusGone value)? gone,
    TResult Function(HttpStatusLengthRequired value)? lengthRequired,
    TResult Function(HttpStatusPreconditionFailed value)? preconditionFailed,
    TResult Function(HttpStatusRequestEntityTooLarge value)?
        requestEntityTooLarge,
    TResult Function(HttpStatusRequestUriTooLong value)? requestUriTooLong,
    TResult Function(HttpStatusUnsupportedMediaType value)?
        unsupportedMediaType,
    TResult Function(HttpStatusRequestedRangeNotSatisfiable value)?
        requestedRangeNotSatisfiable,
    TResult Function(HttpStatusExpectationFailed value)? expectationFailed,
    TResult Function(HttpStatusMisdirectedRequest value)? misdirectedRequest,
    TResult Function(HttpStatusUnprocessableEntity value)? unprocessableEntity,
    TResult Function(HttpStatusLocked value)? locked,
    TResult Function(HttpStatusFailedDependency value)? failedDependency,
    TResult Function(HttpStatusUpgradeRequired value)? upgradeRequired,
    TResult Function(HttpStatusPreconditionRequired value)?
        preconditionRequired,
    TResult Function(HttpStatusTooManyRequests value)? tooManyRequests,
    TResult Function(HttpStatusRequestHeaderFieldsTooLarge value)?
        requestHeaderFieldsTooLarge,
    TResult Function(HttpStatusConnectionClosedWithoutResponse value)?
        connectionClosedWithoutResponse,
    TResult Function(HttpStatusUnavailableForLegalReasons value)?
        unavailableForLegalReasons,
    TResult Function(HttpStatusClientClosedRequest value)? clientClosedRequest,
    TResult Function(HttpStatusInternalServerError value)? internalServerError,
    TResult Function(HttpStatusNotImplemented value)? notImplemented,
    TResult Function(HttpStatusBadGateway value)? badGateway,
    TResult Function(HttpStatusServiceUnavailable value)? serviceUnavailable,
    TResult Function(HttpStatusGatewayTimeout value)? gatewayTimeout,
    TResult Function(HttpStatusHttpVersionNotSupported value)?
        httpVersionNotSupported,
    TResult Function(HttpStatusVariantAlsoNegotiates value)?
        variantAlsoNegotiates,
    TResult Function(HttpStatusInsufficientStorage value)? insufficientStorage,
    TResult Function(HttpStatusLoopDetected value)? loopDetected,
    TResult Function(HttpStatusNotExtended value)? notExtended,
    TResult Function(HttpStatusNetworkAuthenticationRequired value)?
        networkAuthenticationRequired,
    TResult Function(HttpStatusNetworkConnectTimeoutError value)?
        networkConnectTimeoutError,
    required TResult orElse(),
  }) {
    if (networkConnectTimeoutError != null) {
      return networkConnectTimeoutError(this);
    }
    return orElse();
  }
}

abstract class HttpStatusNetworkConnectTimeoutError extends HttpStatus {
  const factory HttpStatusNetworkConnectTimeoutError() =
      _$HttpStatusNetworkConnectTimeoutError;
  const HttpStatusNetworkConnectTimeoutError._() : super._();
}
